name: Release

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

env:
  APP_NAME: GittyCat
  PROJECT_FILE: GittyCat.xcodeproj
  SCHEME: GittyCat
  ARCHIVE_PATH: GittyCat.xcarchive
  EXPORT_PATH: .
  SIGNING_METHOD: adhoc # Set to 'adhoc' for free signing, 'developer' for proper signing + notarization

jobs:
  build:
    runs-on: macos-15

    steps:
      - name: Delete old prerelease
        if: github.ref_type == 'branch'
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set ZIP name for tag
        if: github.ref_type == 'tag'
        run: echo "ZIP_NAME=${{ env.APP_NAME }}-$(git describe --tags --match 'v*').zip" >> $GITHUB_ENV

      - name: Set ZIP name for branch
        if: github.ref_type == 'branch'
        run: echo "ZIP_NAME=${{ env.APP_NAME }}-$(git describe --tags).zip" >> $GITHUB_ENV

      - name: Build
        run: |
          xcodebuild archive \
            -project ${{ env.PROJECT_FILE }} \
            -scheme ${{ env.SCHEME }} \
            -configuration Release \
            -archivePath ${{ env.ARCHIVE_PATH }} \
            MARKETING_VERSION=${{ github.ref_name }}
          
          xcodebuild archive \
            -archivePath ${{ env.ARCHIVE_PATH }} \
            -exportArchive \
            -exportOptionsPlist export_options.plist \
            -exportPath ${{ env.EXPORT_PATH }}

      - name: Ad-hoc sign
        if: env.SIGNING_METHOD == 'adhoc'
        uses: indygreg/apple-code-sign-action@v1
        with:
          input_path: ${{ env.APP_NAME }}.app

      - name: Prepare certificate
        if: env.SIGNING_METHOD == 'developer'
        run: echo "${{ secrets.APPLE_CERTIFICATE }}" | base64 --decode > cert.p12

      - name: Sign and notarize
        if: env.SIGNING_METHOD == 'developer'
        uses: indygreg/apple-code-sign-action@v1
        with:
          input_path: ${{ env.APP_NAME }}.app
          notarize: true
          staple: true
          p12_file: cert.p12
          p12_password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          app_store_connect_api_issuer: ${{ secrets.APPLE_API_ISSUER }}
          app_store_connect_api_key: ${{ secrets.APPLE_API_KEY }}

      - name: Create zip
        run: zip -r "${{ env.ZIP_NAME }}" "${{ env.APP_NAME }}.app"

      - name: Release
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ZIP_NAME }}

      - name: Prerelease
        if: github.ref_type == 'branch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: prerelease
          prerelease: true
          files: ${{ env.ZIP_NAME }}
